name: Generate custom Iosevka version

on: [push, repository_dispatch]

jobs:
  generate:
    timeout-minutes: 40
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Install Dependencies
      run: |
        brew install ttfautohint
        brew tap caryll/tap
        brew install otfcc-mac64
        pip3 install afdko
    - name: Clone latest Iosevka-latest
      id: clone
      run: |
        git clone https://github.com/be5invis/Iosevka.git --depth 1
    - name: Get version strings
      id: version
      run: |
        AK_VERSION=$(head -n 1 private-build-plans.toml | cut -f 3 -d ' ')
        cd Iosevka
        IO_VERSION=$(cat package.json | jq -r '(.version)')
        IO_SHA=$(git rev-parse HEAD | head -c 7)
        echo "::set-output name=ak::$AK_VERSION"
        echo "::set-output name=iosevka::$IO_VERSION"
        echo "::set-output name=sha::$(git rev-parse HEAD)"
        echo "::set-output name=full::$AK_VERSION.$IO_VERSION-$IO_SHA"
    - name: Copy settings and Install dependencies
      run: |
        cp private-build-plans.toml Iosevka/
        cd Iosevka
        npm install
    - name: Run build
      run: |
        cd Iosevka
        npm run build -- ttf::iosevka-ak2
      # npm run build -- contents::iosevka-ak2-sans
    - name: ZIP dist files
      run: |
        zip -r iosevka-ak-${{ steps.version.outputs.full}} ${{ github.workspace }}/Iosevka/dist/iosevka-ak2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.full }}
        release_name: Release ${{ steps.version.outputs.full }}
        body: |
          Latest build:
            - build plan version: ${{ steps.version.outputs.ak }}
            - iosevka version: ${{ steps.version.outputs.iosevka }}
            - iosevka checkout sha: ${{ steps.version.outputs.sha }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iosevka-ak-${{ steps.version.outputs.full }}.zip
        asset_name: iosevka-ak-${{ steps.version.outputs.full }}.zip
        asset_content_type: application/zip