name: Generate custom Iosevka version

on: [push, workflow_dispatch]

jobs:
  generate:
    timeout-minutes: 90
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install Dependencies
      run: |
        brew install ttfautohint
        brew tap caryll/tap
        brew install otfcc-mac64
        pip3 install afdko
    - name: Clone latest Iosevka-latest
      id: clone
      run: |
        git clone https://github.com/be5invis/Iosevka.git --depth 1
    - name: Get version strings
      id: version
      run: |
        AK_VERSION=$(head -n 1 private-build-plans.toml | cut -f 3 -d ' ')
        cd Iosevka
        IO_VERSION=$(cat package.json | jq -r '(.version)')
        IO_SHA=$(git rev-parse --short HEAD)
        echo "ak=$AK_VERSION" >> $GITHUB_OUTPUT
        echo "iosevka=$IO_VERSION" >> $GITHUB_OUTPUT
        echo "sha=$IO_SHA" >> $GITHUB_OUTPUT
        echo "full=$AK_VERSION.$IO_VERSION" >> $GITHUB_OUTPUT
    - name: Copy settings and Install dependencies
      run: |
        cp private-build-plans.toml Iosevka/
        cd Iosevka
        npm install
    - name: Run build
      run: |
        cd Iosevka
        npm run build -- ttf::iosevka-ak2
        npm run build -- ttf::iosevka-ak2-prose
    - name: ZIP dist files
      run: |
        mv ${{ github.workspace }}/Iosevka/dist/iosevka-ak2/ttf ./iosevka-ak2-${{ steps.version.outputs.full }}
        mv ${{ github.workspace }}/Iosevka/dist/iosevka-ak2-prose/ttf ./iosevka-ak2-prose-${{ steps.version.outputs.full }}
        zip -r iosevka-ak2-${{ steps.version.outputs.full }}.zip iosevka-ak2-${{ steps.version.outputs.full }}
        zip -r iosevka-ak2-prose-${{ steps.version.outputs.full }}.zip iosevka-ak2-prose-${{ steps.version.outputs.full }}
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.full }}
        release_name: Release ${{ steps.version.outputs.full }}
        body: |
          Iosevka AK2 ${{ steps.version.outputs.full }} and Iosevka AK2 Sans ${{ steps.version.outputs.full }}:
          - build plan version: **${{ steps.version.outputs.ak }}**
          - iosevka version: **${{ steps.version.outputs.iosevka }}**
          - iosevka version hash: **${{ steps.version.outputs.sha }}**
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iosevka-ak2-${{ steps.version.outputs.full }}.zip
        asset_name: iosevka-ak2-${{ steps.version.outputs.full }}.zip
        asset_content_type: application/zip
    - name: Upload Release Asset
      id: upload-release-asset-2
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./iosevka-ak2-prose-${{ steps.version.outputs.full }}.zip
        asset_name: iosevka-ak2-prose-${{ steps.version.outputs.full }}.zip
        asset_content_type: application/zip
